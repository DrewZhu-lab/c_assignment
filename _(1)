#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
 
#define MAX_WORD_LEN  50
#define DEBUG 0
#define LARGE_LENGTH 100
static char one_line[LARGE_LENGTH];
void check_char(FILE *fp,char ch,char* word,int * blank_flag,int * count,int* one_line_count)
{
    if (isalpha(ch)||isdigit(ch)||ispunct(ch)) 
    {
        word[*count] = ch;
        (*count)++;
        *blank_flag=0;
    }
    else if (isspace(ch) && !(*blank_flag)) {
       if(*one_line_count+(*count)<MAX_WORD_LEN)
       { 
       	for(int i =0;i<*count;++i){
          one_line[*one_line_count]= word[i];
      	  (*one_line_count)++;
	}
	one_line[*one_line_count]='\t';
	printf("%s",one_line);
       }
       else
       {
	   
	   *one_line_count=0;
	  memset(one_line,'\0',LARGE_LENGTH);
//      	   if(*count>=MAX_WORD_LEN){
//	   	for( int i = 0;i<*count;++i)
//	   	{
//	   	   one_line[i]=word[*count];
//	  	}
//	   }
       }
       memset(word,'\0',LARGE_LENGTH);
       *count=0;
       *blank_flag = 1;
    }

}
void read_words(FILE * fp)
{
    char ch;
    char word[LARGE_LENGTH];
    int blank_flag = 0;
    int count=0;
    int one_line_count=0;
    while ((ch = fgetc(fp)) != EOF) {
        check_char(fp,ch,word,&blank_flag,&count,&one_line_count);
    }
}
int main(int argc, char **argv)
{
    FILE *fp = fopen(argv[1],"r");
    if (!fp)
        return -1;
	read_words(fp);
    fclose(fp);
    return 0;
}
